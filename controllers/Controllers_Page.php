<?phpinclude_once('models/tasks.php');include_once('models/auth.php');include_once('models/users.php');include_once('models/status.php');include_once('models/validation.php');include_once('Controllers_Base.php');class Controllers_Page extends Controllers_Base{	function __construct(){				parent::__construct();	}	public function action_index(){        if (isset($_POST['completed']) && $_POST['completed'] == 'on'){            $completed_task = completedTask($_POST['id_task']);        }        $order = 'ASC';        $order_icon = 'a-z↓';        $order_value = '';        if (isset($_GET['order']) && isset($_SESSION['sort'])        && !isset($_GET['sort'])        ){            $order_value = $_SESSION['sort'];            $order = $_GET['order'];            if ($order == 'ASC'){                $order_icon = 'a-z↓';            }else if ($order == 'DESC'){                $order_icon = 'z-a↓';            }        }        if ($_SESSION['sort'] != $_GET['sort']){            unset ($_SESSION['change']);        }        if (isset($_GET['sort']) && !isset($_GET['order'])){            $_SESSION['sort'] = $_GET['sort'];            $order_value = $_GET['sort'];            $order = getOrder();            if ($order == 'ASC'){                $order_icon = 'a-z↓';            }else if ($order == 'DESC'){                $order_icon = 'z-a↓';            }        }        $$order_value = $order_icon;        $tasksCount = getTasksCount();        $results_per_page = 3;        $count_pages = (intdiv($tasksCount, $results_per_page));        $count_pages_total = ($tasksCount % $results_per_page ? $count_pages + 1 : $count_pages);        if (!isset($_GET['page'])){            $page = 1;        }else{            $page = $_GET['page'];        }        $this->title .= '';        $statusData = getStatusData();	    $usersData = getUsersData();        $tasks = getTasks($results_per_page, $order );		$this->content = $this->Template('views/index.php', array(		    'page' => $page,            'results_per_page' => $results_per_page,		    'tasksCount' => $tasksCount,		    'count_pages' => $count_pages_total,            'statusData' => $statusData,            'usersData' => $usersData,		    'tasks' => $tasks,            "$order_value" => $$order_value,            'order' => $order,            ));	}    public function action_create(){            $this->title .= '::Создайте задачу';            $usersData = getUsersData();        if($this->isPost()){            $task_id = $_POST['id_task'];            $task_description = clean($_POST['description']);            $email = $_POST['email'];            if (filter_var($email, FILTER_VALIDATE_EMAIL)) {                $response = setTask($task_id, $task_description, $email);            }else{                $response = 'email указан неверно!';            }        }        $this->content = $this->Template('views/task.php',            array(                'usersData' => $usersData,                'response' => $response,                ));    }    public function action_edit(){        $this->title .= '::Редактирование';        $task_data = getTask($_GET['id_task']);        $task_id = $task_data['0']['id'];        $task_description = $task_data['0']['description'];        $id_user = $task_data['0']['id_user'];        $user_data = getUser($id_user);        $user_name = $user_data['0']['name'];        $user_email = $user_data['0']['email'];        if($this->isPost())        {            $task_id = $_POST['id_task'];            $task_description = clean($_POST['description']);            $response = setTask($task_id, $task_description);            header('location: index.php');            exit();        }        $this->content = $this->Template('views/edit.php', array(                'task_id' => $task_id,                'user_name' => $user_name,                'user_email' => $user_email,                'task_description' => $task_description,        ));    }    public function action_auth()    {        if ($_SERVER['REQUEST_METHOD'] == 'POST'){            if(!authWithCredentials()){                $autherror = 'Неправильный логин/пароль';                unset($_SESSION["user"]);                session_destroy();            }            else{                header("Location: /");            }        }        $this->content = $this->Template('views/auth.php',            array('autherror' => $autherror));    }    public function action_logout(){        unset($_SESSION["user"]);        session_destroy();        header("Location: /");    }}